using ChessProject
using Test

# Test case 1. This case is chosen to identify a case where there is *only* one legal move for the king, which is to capture the black queen.
println("Test Case 1:")
test_board_1 = Board(UInt8[0x11, 0x09, 0x0d, 0x00, 0x15, 0x0d, 0x09, 0x00, 0x05, 0x05, 0x16, 0x05, 0x00, 0x05, 0x05, 0x00, 0x00, 0x00, 0x19,
    0x00, 0x05, 0x00, 0x00, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x05, 0x06, 0x06, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
    0x0a, 0x00, 0x0e, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x12, 0x00, 0x1a, 0x00, 0x0e, 0x0a, 0x12],
    0x0000000084946b77, 0xea94344b00000400, 0x0800000000040000, 0x0000000000000410, 0x8200000000800001, 0x2000100000000024, 0x4000040000000042,
    0x0094204b84106b00, 0x01, 0x0f, 0x0000000000000000)
# in this test case, we expect 5 candidate moves to be generated, all from the king.
ml = MoveList(200)
gen_moves!(ml, test_board_1)
@test length(ml) == 5
